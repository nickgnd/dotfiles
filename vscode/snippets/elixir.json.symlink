{
	// Place your snippets for elixir here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"inpsectSelectedText": {
		"prefix": "lin",
		"body": "IO.inspect($TM_SELECTED_TEXT, label: \"${TM_SELECTED_TEXT/(.*)/${1:/upcase}/}$0\")",
		"description": "IO.inspect with selected text as label."
	},
	"pipeInspect": {
		"prefix": "pin",
		"body": "|> IO.inspect(label: \"$TM_FILEPATH:$TM_LINE_NUMBER$0\")",
		"description": "IO.inspect with selected text as label."
	},
	"inspectFromClipboard": {
		"prefix": "cin",
		"body": "IO.inspect($CLIPBOARD, label: \"${CLIPBOARD/(.*)/${1:/upcase}/}$0\")",
		"description": "IO.inspect clipboard content."
	},
	"tagThis": {
		"prefix": "this",
		"body": "@tag :this$0",
		"description": "Add `@tag :this` for testing purposes"
	},
	"fastElixirMap": {
		"prefix": "k",
		"body": "$1: $1$0",
		"description": "Fast map creation using the key as value as well `%{foo: foo}`"
	},
}
